{"version":3,"sources":["flipclock/js/libs/timer.js"],"names":["$","FlipClock","Timer","Base","extend","callbacks","destroy","create","init","interval","start","stop","reset","count","factory","animationRate","constructor","options","base","callback","getElapsed","getElapsedTime","Date","time","clearInterval","timer","_setInterval","running","_createTimer","_clearInterval","_destroyTimer","_interval","t","setInterval","jQuery"],"mappings":"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","file":"flipclock/js/libs/timer.js","sourcesContent":["/*jshint smarttabs:true */\n\n/**\n * FlipClock.js\n *\n * @author     Justin Kimbrell\n * @copyright  2013 - Objective HTML, LLC\n * @licesnse   http://www.opensource.org/licenses/mit-license.php\n */\n\t\n(function($) {\n\t\n\t\"use strict\";\n\t\n\t/**\n\t * The FlipClock.Timer object managers the JS timers\n\t *\n\t * @param\tobject  The parent FlipClock.Factory object\n\t * @param\tobject  Override the default options\n\t */\n\t\n\tFlipClock.Timer = FlipClock.Base.extend({\n\t\t\n\t\t/**\n\t\t * Callbacks\n\t\t */\t\t\n\t\t \n\t\tcallbacks: {\n\t\t\tdestroy: false,\n\t\t\tcreate: false,\n\t\t\tinit: false,\n\t\t\tinterval: false,\n\t\t\tstart: false,\n\t\t\tstop: false,\n\t\t\treset: false\n\t\t},\n\t\t\n\t\t/**\n\t\t * FlipClock timer count (how many intervals have passed)\n\t\t */\t\t\n\t\t \n\t\tcount: 0,\n\t\t\n\t\t/**\n\t\t * The parent FlipClock.Factory object\n\t\t */\t\t\n\t\t \n\t\tfactory: false,\n\t\t\n\t\t/**\n\t\t * Timer interval (1 second by default)\n\t\t */\t\t\n\t\t \n\t\tinterval: 1000,\n\n\t\t/**\n\t\t * The rate of the animation in milliseconds (not currently in use)\n\t\t */\t\t\n\t\t \n\t\tanimationRate: 1000,\n\t\t\t\t\n\t\t/**\n\t\t * Constructor\n\t\t *\n\t\t * @return\tvoid\n\t\t */\t\t\n\t\t \n\t\tconstructor: function(factory, options) {\n\t\t\tthis.base(options);\n\t\t\tthis.factory = factory;\n\t\t\tthis.callback(this.callbacks.init);\t\n\t\t\tthis.callback(this.callbacks.create);\n\t\t},\n\t\t\n\t\t/**\n\t\t * This method gets the elapsed the time as an interger\n\t\t *\n\t\t * @return\tvoid\n\t\t */\t\t\n\t\t \n\t\tgetElapsed: function() {\n\t\t\treturn this.count * this.interval;\n\t\t},\n\t\t\n\t\t/**\n\t\t * This method gets the elapsed the time as a Date object\n\t\t *\n\t\t * @return\tvoid\n\t\t */\t\t\n\t\t \n\t\tgetElapsedTime: function() {\n\t\t\treturn new Date(this.time + this.getElapsed());\n\t\t},\n\t\t\n\t\t/**\n\t\t * This method is resets the timer\n\t\t *\n\t\t * @param \tcallback  This method resets the timer back to 0\n\t\t * @return\tvoid\n\t\t */\t\t\n\t\t \n\t\treset: function(callback) {\n\t\t\tclearInterval(this.timer);\n\t\t\tthis.count = 0;\n\t\t\tthis._setInterval(callback);\t\t\t\n\t\t\tthis.callback(this.callbacks.reset);\n\t\t},\n\t\t\n\t\t/**\n\t\t * This method is starts the timer\n\t\t *\n\t\t * @param \tcallback  A function that is called once the timer is destroyed\n\t\t * @return\tvoid\n\t\t */\t\t\n\t\t \n\t\tstart: function(callback) {\t\t\n\t\t\tthis.factory.running = true;\n\t\t\tthis._createTimer(callback);\n\t\t\tthis.callback(this.callbacks.start);\n\t\t},\n\t\t\n\t\t/**\n\t\t * This method is stops the timer\n\t\t *\n\t\t * @param \tcallback  A function that is called once the timer is destroyed\n\t\t * @return\tvoid\n\t\t */\t\t\n\t\t \n\t\tstop: function(callback) {\n\t\t\tthis.factory.running = false;\n\t\t\tthis._clearInterval(callback);\n\t\t\tthis.callback(this.callbacks.stop);\n\t\t\tthis.callback(callback);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Clear the timer interval\n\t\t *\n\t\t * @return\tvoid\n\t\t */\t\t\n\t\t \n\t\t_clearInterval: function() {\n\t\t\tclearInterval(this.timer);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Create the timer object\n\t\t *\n\t\t * @param \tcallback  A function that is called once the timer is created\n\t\t * @return\tvoid\n\t\t */\t\t\n\t\t \n\t\t_createTimer: function(callback) {\n\t\t\tthis._setInterval(callback);\t\t\n\t\t},\n\t\t\n\t\t/**\n\t\t * Destroy the timer object\n\t\t *\n\t\t * @param \tcallback  A function that is called once the timer is destroyed\n\t\t * @return\tvoid\n\t\t */\t\t\n\t\t \t\n\t\t_destroyTimer: function(callback) {\n\t\t\tthis._clearInterval();\t\t\t\n\t\t\tthis.timer = false;\n\t\t\tthis.callback(callback);\n\t\t\tthis.callback(this.callbacks.destroy);\n\t\t},\n\t\t\n\t\t/**\n\t\t * This method is called each time the timer interval is ran\n\t\t *\n\t\t * @param \tcallback  A function that is called once the timer is destroyed\n\t\t * @return\tvoid\n\t\t */\t\t\n\t\t \n\t\t_interval: function(callback) {\n\t\t\tthis.callback(this.callbacks.interval);\n\t\t\tthis.callback(callback);\n\t\t\tthis.count++;\n\t\t},\n\t\t\n\t\t/**\n\t\t * This sets the timer interval\n\t\t *\n\t\t * @param \tcallback  A function that is called once the timer is destroyed\n\t\t * @return\tvoid\n\t\t */\t\t\n\t\t \n\t\t_setInterval: function(callback) {\n\t\t\tvar t = this;\n\t\n\t\t\tt._interval(callback);\n\n\t\t\tt.timer = setInterval(function() {\t\t\n\t\t\t\tt._interval(callback);\n\t\t\t}, this.interval);\n\t\t}\n\t\t\t\n\t});\n\t\n}(jQuery));\n"],"sourceRoot":"/source/"}