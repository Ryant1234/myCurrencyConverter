{"version":3,"sources":["flipclock/js/libs/time.js"],"names":["$","FlipClock","Time","Base","extend","time","factory","minimumDigits","constructor","options","base","convertDigitsToArray","str","data","toString","x","length","match","push","digit","i","timeStr","digitize","obj","each","value","charAt","unshift","getDateObject","Date","getTime","getTimeSeconds","getDayCounter","includeSeconds","digits","getDays","getHours","getMinutes","getSeconds","mod","days","Math","floor","getHourCounter","getHourly","hours","getMilitaryTime","date","showSeconds","minutes","getMinuteCounter","countdown","max","console","log","merid","seconds","ceil","getWeeks","weeks","removeLeadingZeros","totalDigits","total","newArray","parseInt","addSeconds","setSeconds","addSecond","subSeconds","subSecond","jQuery"],"mappings":"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","file":"flipclock/js/libs/time.js","sourcesContent":["/*jshint smarttabs:true */\n\n/**\n * FlipClock.js\n *\n * @author     Justin Kimbrell\n * @copyright  2013 - Objective HTML, LLC\n * @licesnse   http://www.opensource.org/licenses/mit-license.php\n */\n\t\n(function($) {\n\t\n\t\"use strict\";\n\t\t\t\n\t/**\n\t * The FlipClock Time class is used to manage all the time \n\t * calculations.\n\t *\n\t * @param \tobject  A FlipClock.Factory object\n\t * @param \tmixed   This is the digit used to set the clock. If an \n\t *\t\t\t\t    object is passed, 0 will be used.\t\n\t * @param \tobject  An object of properties to override the default\t\n\t */\n\t \t\n\tFlipClock.Time = FlipClock.Base.extend({\n\t\t\n\t\t/**\n\t\t * The time (in seconds) or a date object\n\t\t */\t\t\n\t\t \n\t\ttime: 0,\n\t\t\n\t\t/**\n\t\t * The parent FlipClock.Factory object\n\t\t */\t\t\n\t\t \n\t\tfactory: false,\n\t\t\n\t\t/**\n\t\t * The minimum number of digits the clock face must have\n\t\t */\t\t\n\t\t \n\t\tminimumDigits: 0,\n\n\t\t/**\n\t\t * Constructor\n\t\t *\n\t\t * @param  object  A FlipClock.Factory object\n\t\t * @param  int     An integer use to select the correct digit\n\t\t * @param  object  An object to override the default properties\t \n\t\t */\n\t\t \n\t\tconstructor: function(factory, time, options) {\n\t\t\tif(typeof options != \"object\") {\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\tif(!options.minimumDigits) {\n\t\t\t\toptions.minimumDigits = factory.minimumDigits;\n\t\t\t}\n\n\t\t\tthis.base(options);\n\t\t\tthis.factory = factory;\n\n\t\t\tif(time) {\n\t\t\t\tthis.time = time;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Convert a string or integer to an array of digits\n\t\t *\n\t\t * @param   mixed  String or Integer of digits\t \n\t\t * @return  array  An array of digits \n\t\t */\n\t\t \n\t\tconvertDigitsToArray: function(str) {\n\t\t\tvar data = [];\n\t\t\t\n\t\t\tstr = str.toString();\n\t\t\t\n\t\t\tfor(var x = 0;x < str.length; x++) {\n\t\t\t\tif(str[x].match(/^\\d*$/g)) {\n\t\t\t\t\tdata.push(str[x]);\t\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn data;\n\t\t},\n\t\t\n\t\t/**\n\t\t * Get a specific digit from the time integer\n\t\t *\n\t\t * @param   int    The specific digit to select from the time\t \n\t\t * @return  mixed  Returns FALSE if no digit is found, otherwise\n\t\t *\t\t\t\t   the method returns the defined digit\t \n\t\t */\n\t\t \n\t\tdigit: function(i) {\n\t\t\tvar timeStr = this.toString();\n\t\t\tvar length  = timeStr.length;\n\t\t\t\n\t\t\tif(timeStr[length - i])\t {\n\t\t\t\treturn timeStr[length - i];\n\t\t\t}\n\t\t\t\n\t\t\treturn false;\n\t\t},\n\n\t\t/**\n\t\t * Formats any array of digits into a valid array of digits\n\t\t *\n\t\t * @param   mixed  An array of digits\t \n\t\t * @return  array  An array of digits \n\t\t */\n\t\t \n\t\tdigitize: function(obj) {\n\t\t\tvar data = [];\n\n\t\t\t$.each(obj, function(i, value) {\n\t\t\t\tvalue = value.toString();\n\t\t\t\t\n\t\t\t\tif(value.length == 1) {\n\t\t\t\t\tvalue = '0'+value;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor(var x = 0; x < value.length; x++) {\n\t\t\t\t\tdata.push(value.charAt(x));\n\t\t\t\t}\t\t\t\t\n\t\t\t});\n\n\t\t\tif(data.length > this.minimumDigits) {\n\t\t\t\tthis.minimumDigits = data.length;\n\t\t\t}\n\t\t\t\n\t\t\tif(this.minimumDigits > data.length) {\n\t\t\t\tfor(var x = data.length; x < this.minimumDigits; x++) {\n\t\t\t\t\tdata.unshift('0');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn data;\n\t\t},\n\t\t\n\t\t/**\n\t\t * Gets a new Date object for the current time\n\t\t *\n\t\t * @return  array  Returns a Date object\n\t\t */\n\n\t\tgetDateObject: function() {\n\t\t\tif(this.time instanceof Date) {\n\t\t\t\treturn this.time;\n\t\t\t}\n\n\t\t\treturn new Date((new Date()).getTime() + this.getTimeSeconds() * 1000);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Gets a digitized daily counter\n\t\t *\n\t\t * @return  object  Returns a digitized object\n\t\t */\n\n\t\tgetDayCounter: function(includeSeconds) {\n\t\t\tvar digits = [\n\t\t\t\tthis.getDays(),\n\t\t\t\tthis.getHours(true),\n\t\t\t\tthis.getMinutes(true)\n\t\t\t];\n\n\t\t\tif(includeSeconds) {\n\t\t\t\tdigits.push(this.getSeconds(true));\n\t\t\t}\n\n\t\t\treturn this.digitize(digits);\n\t\t},\n\n\t\t/**\n\t\t * Gets number of days\n\t\t *\n\t\t * @param   bool  Should perform a modulus? If not sent, then no.\n\t\t * @return  int   Retuns a floored integer\n\t\t */\n\t\t \n\t\tgetDays: function(mod) {\n\t\t\tvar days = this.getTimeSeconds() / 60 / 60 / 24;\n\t\t\t\n\t\t\tif(mod) {\n\t\t\t\tdays = days % 7;\n\t\t\t}\n\t\t\t\n\t\t\treturn Math.floor(days);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Gets an hourly breakdown\n\t\t *\n\t\t * @return  object  Returns a digitized object\n\t\t */\n\t\t \n\t\tgetHourCounter: function() {\n\t\t\tvar obj = this.digitize([\n\t\t\t\tthis.getHours(),\n\t\t\t\tthis.getMinutes(true),\n\t\t\t\tthis.getSeconds(true)\n\t\t\t]);\n\t\t\t\n\t\t\treturn obj;\n\t\t},\n\t\t\n\t\t/**\n\t\t * Gets an hourly breakdown\n\t\t *\n\t\t * @return  object  Returns a digitized object\n\t\t */\n\t\t \n\t\tgetHourly: function() {\n\t\t\treturn this.getHourCounter();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Gets number of hours\n\t\t *\n\t\t * @param   bool  Should perform a modulus? If not sent, then no.\n\t\t * @return  int   Retuns a floored integer\n\t\t */\n\t\t \n\t\tgetHours: function(mod) {\n\t\t\tvar hours = this.getTimeSeconds() / 60 / 60;\n\t\t\t\n\t\t\tif(mod) {\n\t\t\t\thours = hours % 24;\t\n\t\t\t}\n\t\t\t\n\t\t\treturn Math.floor(hours);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Gets the twenty-four hour time\n\t\t *\n\t\t * @return  object  returns a digitized object\n\t\t */\n\t\t \n\t\tgetMilitaryTime: function(date, showSeconds) {\n\t\t\tif(typeof showSeconds === \"undefined\") {\n\t\t\t\tshowSeconds = true;\n\t\t\t}\n\n\t\t\tif(!date) {\n\t\t\t\tdate = this.getDateObject();\n\t\t\t}\n\n\t\t\tvar data  = [\n\t\t\t\tdate.getHours(),\n\t\t\t\tdate.getMinutes()\t\t\t\n\t\t\t];\n\n\t\t\tif(showSeconds === true) {\n\t\t\t\tdata.push(date.getSeconds());\n\t\t\t}\n\n\t\t\treturn this.digitize(data);\n\t\t},\n\t\t\t\t\n\t\t/**\n\t\t * Gets number of minutes\n\t\t *\n\t\t * @param   bool  Should perform a modulus? If not sent, then no.\n\t\t * @return  int   Retuns a floored integer\n\t\t */\n\t\t \n\t\tgetMinutes: function(mod) {\n\t\t\tvar minutes = this.getTimeSeconds() / 60;\n\t\t\t\n\t\t\tif(mod) {\n\t\t\t\tminutes = minutes % 60;\n\t\t\t}\n\t\t\t\n\t\t\treturn Math.floor(minutes);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Gets a minute breakdown\n\t\t */\n\t\t \n\t\tgetMinuteCounter: function() {\n\t\t\tvar obj = this.digitize([\n\t\t\t\tthis.getMinutes(),\n\t\t\t\tthis.getSeconds(true)\n\t\t\t]);\n\n\t\t\treturn obj;\n\t\t},\n\t\t\n\t\t/**\n\t\t * Gets time count in seconds regardless of if targetting date or not.\n\t\t *\n\t\t * @return  int   Returns a floored integer\n\t\t */\n\t\t \n\t\tgetTimeSeconds: function(date) {\n\t\t\tif(!date) {\n\t\t\t\tdate = new Date();\n\t\t\t}\n\n\t\t\tif (this.time instanceof Date) {\n\t\t\t\tif (this.factory.countdown) {\n\t\t\t\t\treturn Math.max(this.time.getTime()/1000 - date.getTime()/1000,0);\n\t\t\t\t} else {\n\t\t\t\t\treturn date.getTime()/1000 - this.time.getTime()/1000 ;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\treturn this.time;\n\t\t\t}\n\t\t},\n\t\t\n\t\t/**\n\t\t * Gets the current twelve hour time\n\t\t *\n\t\t * @return  object  Returns a digitized object\n\t\t */\n\t\t \n\t\tgetTime: function(date, showSeconds) {\n\t\t\tif(typeof showSeconds === \"undefined\") {\n\t\t\t\tshowSeconds = true;\n\t\t\t}\n\n\t\t\tif(!date) {\n\t\t\t\tdate = this.getDateObject();\n\t\t\t}\n\n\t\t\tconsole.log(date);\n\n\t\t\t\n\t\t\tvar hours = date.getHours();\n\t\t\tvar merid = hours > 12 ? 'PM' : 'AM';\n\t\t\tvar data   = [\n\t\t\t\thours > 12 ? hours - 12 : (hours === 0 ? 12 : hours),\n\t\t\t\tdate.getMinutes()\t\t\t\n\t\t\t];\n\n\t\t\tif(showSeconds === true) {\n\t\t\t\tdata.push(date.getSeconds());\n\t\t\t}\n\n\t\t\treturn this.digitize(data);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Gets number of seconds\n\t\t *\n\t\t * @param   bool  Should perform a modulus? If not sent, then no.\n\t\t * @return  int   Retuns a ceiled integer\n\t\t */\n\t\t \n\t\tgetSeconds: function(mod) {\n\t\t\tvar seconds = this.getTimeSeconds();\n\t\t\t\n\t\t\tif(mod) {\n\t\t\t\tif(seconds == 60) {\n\t\t\t\t\tseconds = 0;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tseconds = seconds % 60;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn Math.ceil(seconds);\n\t\t},\n\n\t\t/**\n\t\t * Gets number of weeks\n\t\t *\n\t\t * @param   bool  Should perform a modulus? If not sent, then no.\n\t\t * @return  int   Retuns a floored integer\n\t\t */\n\t\t \n\t\tgetWeeks: function(mod) {\n\t\t\tvar weeks = this.getTimeSeconds() / 60 / 60 / 24 / 7;\n\t\t\t\n\t\t\tif(mod) {\n\t\t\t\tweeks = weeks % 52;\n\t\t\t}\n\t\t\t\n\t\t\treturn Math.floor(weeks);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Removes a specific number of leading zeros from the array.\n\t\t * This method prevents you from removing too many digits, even\n\t\t * if you try.\n\t\t *\n\t\t * @param   int    Total number of digits to remove \n\t\t * @return  array  An array of digits \n\t\t */\n\t\t \n\t\tremoveLeadingZeros: function(totalDigits, digits) {\n\t\t\tvar total    = 0;\n\t\t\tvar newArray = [];\n\t\t\t\n\t\t\t$.each(digits, function(i, digit) {\n\t\t\t\tif(i < totalDigits) {\n\t\t\t\t\ttotal += parseInt(digits[i], 10);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewArray.push(digits[i]);\n\t\t\t\t}\n\t\t\t});\n\t\t\t\n\t\t\tif(total === 0) {\n\t\t\t\treturn newArray;\n\t\t\t}\n\t\t\t\n\t\t\treturn digits;\n\t\t},\n\n\t\t/**\n\t\t * Adds X second to the current time\n\t\t */\n\n\t\taddSeconds: function(x) {\n\t\t\tif(this.time instanceof Date) {\n\t\t\t\tthis.time.setSeconds(this.time.getSeconds() + x);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.time += x;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Adds 1 second to the current time\n\t\t */\n\n\t\taddSecond: function() {\n\t\t\tthis.addSeconds(1);\n\t\t},\n\n\t\t/**\n\t\t * Substracts X seconds from the current time\n\t\t */\n\n\t\tsubSeconds: function(x) {\n\t\t\tif(this.time instanceof Date) {\n\t\t\t\tthis.time.setSeconds(this.time.getSeconds() - x);\n\t\t\t}\n\t\t\telse {\n\t\t\t\tthis.time -= x;\n\t\t\t}\n\t\t},\n\n\t\t/**\n\t\t * Substracts 1 second from the current time\n\t\t */\n\n\t\tsubSecond: function() {\n\t\t\tthis.subSeconds(1);\n\t\t},\n\t\t\n\t\t/**\n\t\t * Converts the object to a human readable string\n\t\t */\n\t\t \n\t\ttoString: function() {\n\t\t\treturn this.getTimeSeconds().toString();\n\t\t}\n\t\t\n\t\t/*\n\t\tgetYears: function() {\n\t\t\treturn Math.floor(this.time / 60 / 60 / 24 / 7 / 52);\n\t\t},\n\t\t\n\t\tgetDecades: function() {\n\t\t\treturn Math.floor(this.getWeeks() / 10);\n\t\t}*/\n\t});\n\t\n}(jQuery));\n"],"sourceRoot":"/source/"}