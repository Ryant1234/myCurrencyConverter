{"version":3,"sources":["flipclock/js/faces/dailycounter.js"],"names":["$","FlipClock","DailyCounterFace","Face","extend","showSeconds","constructor","factory","options","base","build","time","t","children","$el","find","offset","getDayCounter","length","each","i","digit","createList","createDivider","insertBefore","lists","flip","doNotAddPlayClass","autoIncrement","jQuery"],"mappings":";;AAAC,WAASA,CAAT,EAAY;;AAEZ;;;;;;;;;;;;AAYAC,WAAUC,gBAAV,GAA6BD,UAAUE,IAAV,CAAeC,MAAf,CAAsB;;AAElDC,eAAa,IAFqC;;AAIlD;;;;;;;AAOAC,eAAa,qBAASC,OAAT,EAAkBC,OAAlB,EAA2B;AACvC,QAAKC,IAAL,CAAUF,OAAV,EAAmBC,OAAnB;AACA,GAbiD;;AAelD;;;;AAIAE,SAAO,eAASC,IAAT,EAAe;AACrB,OAAIC,IAAI,IAAR;AACA,OAAIC,WAAW,KAAKN,OAAL,CAAaO,GAAb,CAAiBC,IAAjB,CAAsB,IAAtB,CAAf;AACA,OAAIC,SAAS,CAAb;;AAEAL,UAAOA,OAAOA,IAAP,GAAc,KAAKJ,OAAL,CAAaI,IAAb,CAAkBM,aAAlB,CAAgC,KAAKZ,WAArC,CAArB;;AAEA,OAAGM,KAAKO,MAAL,GAAcL,SAASK,MAA1B,EAAkC;AACjClB,MAAEmB,IAAF,CAAOR,IAAP,EAAa,UAASS,CAAT,EAAYC,KAAZ,EAAmB;AAC/BT,OAAEU,UAAF,CAAaD,KAAb;AACA,KAFD;AAGA;;AAED,OAAG,KAAKhB,WAAR,EAAqB;AACpBL,MAAE,KAAKuB,aAAL,CAAmB,SAAnB,CAAF,EAAiCC,YAAjC,CAA8C,KAAKC,KAAL,CAAW,KAAKA,KAAL,CAAWP,MAAX,GAAoB,CAA/B,EAAkCJ,GAAhF;AACA,IAFD,MAIA;AACCE,aAAS,CAAT;AACA;;AAEDhB,KAAE,KAAKuB,aAAL,CAAmB,SAAnB,CAAF,EAAiCC,YAAjC,CAA8C,KAAKC,KAAL,CAAW,KAAKA,KAAL,CAAWP,MAAX,GAAoB,CAApB,GAAwBF,MAAnC,EAA2CF,GAAzF;AACAd,KAAE,KAAKuB,aAAL,CAAmB,OAAnB,CAAF,EAA+BC,YAA/B,CAA4C,KAAKC,KAAL,CAAW,KAAKA,KAAL,CAAWP,MAAX,GAAoB,CAApB,GAAwBF,MAAnC,EAA2CF,GAAvF;AACAd,KAAE,KAAKuB,aAAL,CAAmB,MAAnB,EAA2B,IAA3B,CAAF,EAAoCC,YAApC,CAAiD,KAAKC,KAAL,CAAW,CAAX,EAAcX,GAA/D;;AAEA,QAAKL,IAAL;AACA,GA7CiD;;AA+ClD;;;;AAIAiB,QAAM,cAASf,IAAT,EAAegB,iBAAf,EAAkC;AACvC,OAAG,CAAChB,IAAJ,EAAU;AACTA,WAAO,KAAKJ,OAAL,CAAaI,IAAb,CAAkBM,aAAlB,CAAgC,KAAKZ,WAArC,CAAP;AACA;;AAED,QAAKuB,aAAL;;AAEA,QAAKnB,IAAL,CAAUE,IAAV,EAAgBgB,iBAAhB;AACA;;AA3DiD,EAAtB,CAA7B;AA+DA,CA7EA,EA6ECE,MA7ED,CAAD","file":"flipclock/js/faces/dailycounter.js","sourcesContent":["(function($) {\n\n\t/**\n\t * Daily Counter Clock Face\n\t *\n\t * This class will generate a daily counter for FlipClock.js. A\n\t * daily counter will track days, hours, minutes, and seconds. If\n\t * the number of available digits is exceeded in the count, a new\n\t * digit will be created.\n\t *\n\t * @param  object  The parent FlipClock.Factory object\n\t * @param  object  An object of properties to override the default\n\t */\n\n\tFlipClock.DailyCounterFace = FlipClock.Face.extend({\n\n\t\tshowSeconds: true,\n\n\t\t/**\n\t\t * Constructor\n\t\t *\n\t\t * @param  object  The parent FlipClock.Factory object\n\t\t * @param  object  An object of properties to override the default\n\t\t */\n\n\t\tconstructor: function(factory, options) {\n\t\t\tthis.base(factory, options);\n\t\t},\n\n\t\t/**\n\t\t * Build the clock face\n\t\t */\n\n\t\tbuild: function(time) {\n\t\t\tvar t = this;\n\t\t\tvar children = this.factory.$el.find('ul');\n\t\t\tvar offset = 0;\n\n\t\t\ttime = time ? time : this.factory.time.getDayCounter(this.showSeconds);\n\n\t\t\tif(time.length > children.length) {\n\t\t\t\t$.each(time, function(i, digit) {\n\t\t\t\t\tt.createList(digit);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tif(this.showSeconds) {\n\t\t\t\t$(this.createDivider('Seconds')).insertBefore(this.lists[this.lists.length - 2].$el);\n\t\t\t}\n\t\t\telse\n\t\t\t{\n\t\t\t\toffset = 2;\n\t\t\t}\n\n\t\t\t$(this.createDivider('Minutes')).insertBefore(this.lists[this.lists.length - 4 + offset].$el);\n\t\t\t$(this.createDivider('Hours')).insertBefore(this.lists[this.lists.length - 6 + offset].$el);\n\t\t\t$(this.createDivider('Days', true)).insertBefore(this.lists[0].$el);\n\n\t\t\tthis.base();\n\t\t},\n\n\t\t/**\n\t\t * Flip the clock face\n\t\t */\n\n\t\tflip: function(time, doNotAddPlayClass) {\n\t\t\tif(!time) {\n\t\t\t\ttime = this.factory.time.getDayCounter(this.showSeconds);\n\t\t\t}\n\n\t\t\tthis.autoIncrement();\n\n\t\t\tthis.base(time, doNotAddPlayClass);\n\t\t}\n\n\t});\n\n}(jQuery));"],"sourceRoot":"/source/"}