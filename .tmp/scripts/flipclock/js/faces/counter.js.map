{"version":3,"sources":["flipclock/js/faces/counter.js"],"names":["$","FlipClock","CounterFace","Face","extend","shouldAutoIncrement","constructor","factory","options","autoStart","increment","countdown","setTime","getTime","getTimeSeconds","decrement","time","setValue","digits","setCounter","base","build","t","children","$el","find","digitize","length","each","i","digit","list","createList","select","lists","play","flip","doNotAddPlayClass","autoIncrement","reset","Time","original","Math","round","jQuery"],"mappings":"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","file":"flipclock/js/faces/counter.js","sourcesContent":["(function($) {\n\t\t\n\t/**\n\t * Counter Clock Face\n\t *\n\t * This class will generate a generice flip counter. The timer has been\n\t * disabled. clock.increment() and clock.decrement() have been added.\n\t *\n\t * @param  object  The parent FlipClock.Factory object\n\t * @param  object  An object of properties to override the default\t\n\t */\n\t \n\tFlipClock.CounterFace = FlipClock.Face.extend({\n\t\t\n\t\t/**\n\t\t * Tells the counter clock face if it should auto-increment\n\t\t */\n\n\t\tshouldAutoIncrement: false,\n\n\t\t/**\n\t\t * Constructor\n\t\t *\n\t\t * @param  object  The parent FlipClock.Factory object\n\t\t * @param  object  An object of properties to override the default\t\n\t\t */\n\t\t \n\t\tconstructor: function(factory, options) {\n\n\t\t\tif(typeof options != \"object\") {\n\t\t\t\toptions = {};\n\t\t\t}\n\n\t\t\tfactory.autoStart = options.autoStart ? true : false;\n\n\t\t\tif(options.autoStart) {\n\t\t\t\tthis.shouldAutoIncrement = true;\n\t\t\t}\n\n\t\t\tfactory.increment = function() {\n\t\t\t\tfactory.countdown = false;\n\t\t\t\tfactory.setTime(factory.getTime().getTimeSeconds() + 1);\n\t\t\t};\n\n\t\t\tfactory.decrement = function() {\n\t\t\t\tfactory.countdown = true;\n\t\t\t\tvar time = factory.getTime().getTimeSeconds();\n\t\t\t\tif(time > 0) {\n\t\t\t\t\tfactory.setTime(time - 1);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfactory.setValue = function(digits) {\n\t\t\t\tfactory.setTime(digits);\n\t\t\t};\n\n\t\t\tfactory.setCounter = function(digits) {\n\t\t\t\tfactory.setTime(digits);\n\t\t\t};\n\n\t\t\tthis.base(factory, options);\n\t\t},\n\n\t\t/**\n\t\t * Build the clock face\t\n\t\t */\n\t\t \n\t\tbuild: function() {\n\t\t\tvar t        = this;\n\t\t\tvar children = this.factory.$el.find('ul');\n\t\t\tvar time \t = this.factory.getTime().digitize([this.factory.getTime().time]);\n\n\t\t\tif(time.length > children.length) {\n\t\t\t\t$.each(time, function(i, digit) {\n\t\t\t\t\tvar list = t.createList(digit);\n\n\t\t\t\t\tlist.select(digit);\n\t\t\t\t});\n\t\t\t\n\t\t\t}\n\n\t\t\t$.each(this.lists, function(i, list) {\n\t\t\t\tlist.play();\n\t\t\t});\n\n\t\t\tthis.base();\n\t\t},\n\t\t\n\t\t/**\n\t\t * Flip the clock face\n\t\t */\n\t\t \n\t\tflip: function(time, doNotAddPlayClass) {\t\t\t\n\t\t\tif(this.shouldAutoIncrement) {\n\t\t\t\tthis.autoIncrement();\n\t\t\t}\n\n\t\t\tif(!time) {\t\t\n\t\t\t\ttime = this.factory.getTime().digitize([this.factory.getTime().time]);\n\t\t\t}\n\n\t\t\tthis.base(time, doNotAddPlayClass);\n\t\t},\n\n\t\t/**\n\t\t * Reset the clock face\n\t\t */\n\n\t\treset: function() {\n\t\t\tthis.factory.time = new FlipClock.Time(\n\t\t\t\tthis.factory, \n\t\t\t\tthis.factory.original ? Math.round(this.factory.original) : 0\n\t\t\t);\n\n\t\t\tthis.flip();\n\t\t}\n\t});\n\t\n}(jQuery));"],"sourceRoot":"/source/"}